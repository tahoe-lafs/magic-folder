# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[pytest]
twisted = 1

[tox]
envlist = codechecks,{py27,pypy27}-{coverage,nocoverage},integration
minversion = 2.4

[testenv]
passenv = MAGIC_FOLDER_* PIP_* SUBUNITREPORTER_* USERPROFILE HOMEDRIVE HOMEPATH
# Get "certifi" to avoid bug #2913. Basically if a `setup_requires=...` causes
# a package to be installed (with setuptools) then it'll fail on certain
# platforms (travis's OX-X 10.12, Slackware 14.2) because PyPI's TLS
# requirements (TLS >= 1.2) are incompatible with the old TLS clients
# available to those systems.  Installing it ahead of time (with pip) avoids
# this problem.
deps =
     # Pin all of these versions for the same reason you ever want to pin
     # anything: to prevent new releases with regressions from introducing
     # spurious failures into CI runs for whatever development work is
     # happening at the time.  The versions selected here are just the current
     # versions at the time.  Bumping them to keep up with future releases is
     # fine as long as those releases are known to actually work.

     # pip 19.2 introduced support for yanking which we require because of pyrsistent goofs.
     # pip 21.0.0 is the first version of pip with no Python 2.7 support.
     pip==20.3.4

     # 45.0.0 is the first version of setuptools with no Python 2.7 support.
     setuptools==44.0.0

     wheel==0.35.0
     subunitreporter==19.3.2
     # As an exception, we don't pin certifi because it contains CA
     # certificates which necessarily change over time.  Pinning this is
     # guaranteed to cause things to break eventually as old certificates
     # expire and as new ones are used in the wild that aren't present in
     # whatever version we pin.  Hopefully there won't be functionality
     # regressions in new releases of this package that cause us the kind of
     # suffering we're trying to avoid with the above pins.
     certifi

# We add usedevelop=False because testing against a true installation gives
# more useful results.
usedevelop = False
# We use extras=test to get things like "mock" that are required for our unit
# tests.
extras = test
commands =
	 # As an aid to debugging, dump all of the Python packages and their
	 # versions that are installed in the test environment.  This is
	 # particularly useful to get from CI runs - though hopefully the
	 # version pinning we do limits the variability of this output
	 # somewhat.
	 pip freeze
         magic-folder --version

	 nocoverage: python -m twisted.trial {env:MAGIC_FOLDER_TRIAL_ARGS:--rterrors} {posargs:magic_folder}

	 coverage: coverage run --branch -m twisted.trial {env:MAGIC_FOLDER_TRIAL_ARGS:--rterrors} {posargs:magic_folder}
	 coverage: coverage combine
	 coverage: coverage xml


[testenv:integration]
setenv =
         COVERAGE_PROCESS_START=.coveragerc
commands =
	 # NOTE: 'run with "py.test --keep-tempdir -s -v integration/" to debug failures'
	 py.test --coverage -v integration/ {posargs:}
         coverage combine
	 coverage xml
         coverage report

# aka "lint" CI job
[testenv:codechecks]
deps = towncrier==19.2.0
whitelist_externals =
         /bin/mv
commands =
         flake8
         python misc/coding_tools/check-debugging.py

	 # If towncrier.check fails, you forgot to add a towncrier news
	 # fragment explaining the change in this branch.  Create one at
	 # `newsfragments/<ticket>.<change type>` with some text for the news
	 # file.  See pyproject.toml for legal <change type> values.
	 python -m towncrier.check --pyproject towncrier.pyproject.toml --compare-with origin/main

[testenv:draftnews]
passenv = MAGIC_FOLDER_* PIP_* SUBUNITREPORTER_* USERPROFILE HOMEDRIVE HOMEPATH
# see comment in [testenv] about "certifi"
whitelist_externals = mv
deps =
     certifi
     towncrier >= 19.2
commands =
         # With pip >= 10 the existence of pyproject.toml (which we are
         # required to have to configure towncrier) triggers a "build
         # isolation" mode which prevents anything from working.  Avoid
         # triggering that pip behavior by keeping the towncrier configuration
         # somewhere else and only bringing it in when it's actually needed
         # (after pip is done).
         #
         # Some discussion is available at
         # https://github.com/pypa/pip/issues/5696
	 #
	 # towncrier post 19.2 (unreleased as of this writing) adds a --config
	 # option that can be used instead of this file shuffling.
         mv towncrier.pyproject.toml pyproject.toml

         # towncrier 19.2 + works with python2.7
         python -m towncrier --draft

         # put it back
         mv pyproject.toml towncrier.pyproject.toml

[testenv:deprecations]
setenv =
         PYTHONWARNINGS=default::DeprecationWarning
commands =
         python misc/build_helpers/run-deprecations.py --package magic_folder --warnings={env:MAGIC_FOLDER_WARNINGS_LOG:_trial_temp/deprecation-warnings.log} python -m twisted.trial {env:MAGIC_FOLDER_TRIAL_ARGS:--rterrors} {posargs:magic_folder}

[testenv:upcoming-deprecations]
setenv =
         PYTHONWARNINGS=default::DeprecationWarning
deps =
     # Take the base deps as well!
     {[testenv]deps}
     git+https://github.com/warner/foolscap
commands =
         flogtool --version
         python misc/build_helpers/run-deprecations.py --package magic_folder --warnings={env:MAGIC_FOLDER_WARNINGS_LOG:_trial_temp/deprecation-warnings.log} python -m twisted.trial {env:MAGIC_FOLDER_TRIAL_ARGS:--rterrors} {posargs:magic_folder}

# Use 'tox -e docs' to check formatting and cross-references in docs .rst
# files. The published docs are built by code run over at readthedocs.org,
# which does not use this target (but does something similar).
#
# If you have "sphinx" installed in your virtualenv, you can just do "make -C
# docs html", or "cd docs; make html".
#
# You can also open docs/_build/html/index.html to see the rendered docs in
# your web browser.

[testenv:docs]
# we pin docutils because of https://sourceforge.net/p/docutils/bugs/301/
# which asserts when it reads links to .svg files (e.g. about.rst)
deps =
     sphinx
     docutils==0.12
# normal install is not needed for docs, and slows things down
skip_install = True
commands =
         sphinx-build -b html -d {toxinidir}/docs/_build/doctrees {toxinidir}/docs {toxinidir}/docs/_build/html

[testenv:tarballs]
deps =
commands =
         python setup.py update_version
         python setup.py sdist --formats=bztar,gztar,zip bdist_wheel
